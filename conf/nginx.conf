worker_processes 1;

user nobody nobody;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
pid /run/nginx.pid;
error_log /tmp/nginx.error.log;

events {
	worker_connections 1024; # increase if you have lots of clients
	accept_mutex off; # set to 'on' if nginx worker_processes > 1
	# 'use epoll;' to enable for Linux 2.6+
	# 'use kqueue;' to enable for FreeBSD, OSX
}

http {
	include mime.types;
	# fallback in case we can't determine a type
	default_type application/octet-stream;
	access_log /tmp/nginx.access.log combined;
	sendfile on;
	upstream app_server {
		# fail_timeout=0 means we always retry an upstream even if it failed
		# to return a good HTTP response

		# for UNIX domain socket setups
		server unix:/tmp/gunicorn.sock fail_timeout=0;

		# for a TCP configuration
		# server 192.168.0.7:8000 fail_timeout=0;
	}

	server {
		# if no Host match, close the connection to prevent host spoofing
		listen 80 default_server;
		return 444;
	}
	server {
		listen 80;
		server_name localhost;
		return 301 https://$server_name$request_uri;
	}

	server {
		listen 443 ssl;
		client_max_body_size 4G;

		# set the correct host(s) for your site
		server_name localhost www.localhost;
		ssl_certificate /etc/nginx/ssl/nginx.crt;
		ssl_certificate_key /etc/nginx/ssl/nginx.key;

		keepalive_timeout 5;

		# forbid outside local network
		allow 137.194.0.0/16;
		allow 2001:660:330f::/48;
		deny all;

		# path for static files
		root _TARGET_DIR/back;

		location / {
			alias   _TARGET_DIR/front/dist/;
		}

		location /stats/ {
			alias _TARGET_DIR/../stats/;
		}


		location ~ /(api|admin|static|docs)/ {
			try_files $uri @proxy_to_app;
		}

		location @proxy_to_app {
			# Restrict POST requests with basic auth
			# See https://trac.nginx.org/nginx/ticket/633
			limit_except GET OPTIONS {
				auth_basic "Restricted API";
				auth_basic_user_file /var/www/babar3/conf/htpasswd;
			}
			# Forward credentials to Django
			proxy_set_header Authorization $http_x_user_login;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			# enable this if and only if you use HTTPS
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header Host $http_host;
			# we don't want nginx trying to do something clever with
			# redirects, we set the Host: header above already.
			proxy_redirect off;
			proxy_pass http://127.0.0.1:8000;
		}
	}
}
